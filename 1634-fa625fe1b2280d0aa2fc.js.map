{"version":3,"file":"1634-fa625fe1b2280d0aa2fc.js","mappings":"0NAEO,MAAMA,E,SAAkBC,QAAAA,IAAAA,WAAU,yEAAVA,CAAU,kwDAYnBC,GAASA,EAAMC,MAAMC,oB,gDC8F3C,MAhGiB,IAMV,IANW,WAChBC,EAAU,YACVC,EAAW,YACXC,EAAW,YACXC,EAAW,KACXC,GACD,EACC,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,IACzC,EAACC,IAAgBD,EAAAA,EAAAA,UAAS,IAC1BE,EAAkBJ,EAAcG,EAChCE,EAAmBD,EAAkBD,EAC3C,IAAI,WAAEG,EAAU,MAAEC,GAAUR,EAAKS,OACjC,MAAM,EAACC,EAAY,EAACC,IAAkBR,EAAAA,EAAAA,UAAS,KACzC,aAAES,EAAY,WAAEC,IAAeC,EAAAA,EAAAA,GACnCN,EACAG,EACAD,EACA,CAAC,cAAe,SAChB,MAEIK,EAAWhB,EAAYgB,SAAWhB,EAAYgB,SAAW,KACzDC,EAAMjB,EAAYiB,IAAMjB,EAAYiB,IAAM,KAC1CC,EAAeL,EAAaM,MAAMZ,EAAkBD,GAC1DE,EAAaK,EAAaO,OAC1B,MAAMC,EAASJ,EACRT,EAAU,SAAuB,IAAfA,EAAmB,GAAK,KAAG,iBAAiBS,EAAG,IACpED,EACKR,EAAU,SACE,IAAfA,EAAmB,GAAK,KAAG,oBACTQ,EAAQ,IAC1B,OAGAM,EAAYC,IAChBpB,EAAeoB,EAAW,EAG5B,OACE,gBAAC/B,EAAe,KACd,gBAACgC,EAAA,EAAU,CACTC,MAAOJ,EACPK,KAAK,OACLC,IAAKC,EAAAA,EACLC,SAAS,mBAEX,uBAAKC,UAAU,qBACb,gBAAC,KAAS,KACR,gBAAC,KAAG,KACF,gBAAC,KAAG,CAACC,GAAI,GAAIC,GAAI,GACbhC,EAAYiB,KAAQjB,EAAYgB,SAchC,gBAACiB,EAAA,EAAS,CAACtB,YAAaA,EAAaG,WAAYA,EAAYQ,SAAUA,EAAUpB,YAAaA,IAb9F,uBAAK4B,UAAU,kBACb,gBAAC,IAAe,CACdjC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,IAEf,gBAACkC,EAAA,EAAS,CACRtB,YAAaA,EACbG,WAAYA,EACZQ,SAAUA,EAAUpB,YAAaA,KAMvC,uBAAK4B,UAAU,qBACb,gBAAC,KAAG,CAACA,UAAU,cACZZ,EAAaE,OAAS,GACrBF,EAAagB,KAAI,QAAC,GAAEC,EAAE,YAAEC,EAAW,OAAEC,GAAQ,SAC3C,gBAAC,KAAG,CAACN,GAAI,GAAIO,IAAKH,GAChB,gBAACI,EAAA,EAAI,CAAEH,YAAaA,EAAaC,OAAQA,IACrC,IAEV,gBAAC,KAAG,KACDnB,EAAaE,OAAS,GACrB,gBAAC,IAAU,CACTf,aAAcA,EACdmC,WAAY3B,EAAaO,OACzBlB,YAAaA,EACboB,SAAUA,QAOtB,gBAAC,KAAG,CAACS,GAAI,GAAIC,GAAI,GACf,gBAAC,IAAO,CAAChC,YAAaA,QAKd,C","sources":["webpack://Layer5/./src/sections/Blog/Blog-list/blogList.style.js","webpack://Layer5/./src/sections/Blog/Blog-list/index.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BlogPageWrapper = styled.div`\n\t.blog-list-wrapper {\n\t\tmargin: 5rem auto;\n\t}\n\t.blog-lists{\n\t\tmargin-top: 5rem;\n\t}\n\n\t.tooltip-search{\n\t\tmargin-bottom: 0.8rem;\n\t}\n\t.post-block{\n\t\tbackground-color: ${props => props.theme.grey212121ToWhite};\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n\t}\n\t.blog-lists{\n\t\tmargin-top: 5rem;\n\t}\n\t.post-thumb-block{\n\t\theight: 8rem;\n\t\twidth: 25%;\n\t\timg{\n\t\t\tpadding: 0px;\n\t\t\tmargin-left: 0.5rem;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t}\n\n\t.post-content-block{\n\t\theight: 8.5rem;\n\t\twidth: 75%;\n\t}\n\n\t.post-title{\n\t\tfont-size: 1.5rem;\n\t}\n\n\t.post-meta-block{\n\t\tflex-direction: row-reverse;\n\t\tp{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: end;\n\t\t}\n\t\t.author{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: start;\n\t\t\tmargin-bottom:0;\n\t\t}\n\t}\n\n\t@media screen and (max-width:1200px){\n\t\t.post-block{\n\t\t\theight: auto;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 8rem;\n\t\t}\n\n\t}\n\n\t@media screen and (max-width:992px){\n\t\t.post-block{\n\t\t\theight: 10rem;\n\t\t\twidth: auto;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 15rem;\n\t\n\t\t\timg{\n\t\t\t\tmax-height:9rem;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media screen and (max-width:576px){\n\t\t.post-block{\n\t\t\theight: 9rem;\n\t\t}\n\t\t.blog-list-wrapper{\n\t\t\tmargin: 0rem auto 5rem;\n\t\t}\n\t\t.blog-lists{\n\t\t\tmargin-top: 0rem;\n\t\t}\n\t\t.post-content-block{\n\t\t\theight: fit-content;\n\t\t}\n\t\t.tooltip-search{\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t@media only screen and (min-width: 577px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 0;\n    }\n  }\n  \n`;\n","import React, { useState } from \"react\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport Card from \"../../../components/Card\";\nimport { BlogPageWrapper } from \"./blogList.style\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\nimport SearchBox from \"../../../reusecore/Search\";\nimport useDataList from \"../../../utils/usedataList\";\n\nconst BlogList = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  data,\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  let { totalCount, nodes } = data.allMdx;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const category = pageContext.category ? pageContext.category : null;\n  const tag = pageContext.tag ? pageContext.tag : null;\n  const currentPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  totalCount = queryResults.length;\n  const header = tag\n    ? `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n    : category\n      ? `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n      } categorized as \"${category}\"`\n      : \"Blog\";\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title={header}\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row>\n            <Col xs={12} lg={8}>\n              {!pageContext.tag && !pageContext.category ? (\n                <div className=\"tooltip-search\">\n                  <BlogViewToolTip\n                    isListView={isListView}\n                    setListView={setListView}\n                    setGridView={setGridView}\n                  />\n                  <SearchBox\n                    searchQuery={searchQuery}\n                    searchData={searchData}\n                    paginate={paginate} currentPage={currentPage}\n                  />\n                </div>\n              ) : (\n                <SearchBox searchQuery={searchQuery} searchData={searchData} paginate={paginate} currentPage={currentPage} />\n              )}\n              <div className=\"blog-list-wrapper\">\n                <Row className=\"blog-lists\">\n                  {currentPosts.length > 0 &&\n                    currentPosts.map(({ id, frontmatter, fields }) => (\n                      <Col xs={12} key={id}>\n                        <Card  frontmatter={frontmatter} fields={fields} />\n                      </Col>\n                    ))}\n                  <Col>\n                    {currentPosts.length > 0 && (\n                      <Pagination\n                        postsPerPage={postsPerPage}\n                        totalPosts={queryResults.length}\n                        currentPage={currentPage}\n                        paginate={paginate}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={12} lg={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogList;\n"],"names":["BlogPageWrapper","styled","props","theme","grey212121ToWhite","isListView","setListView","setGridView","pageContext","data","currentPage","setCurrentPage","useState","postsPerPage","indexOfLastPost","indexOfFirstPost","totalCount","nodes","allMdx","searchQuery","setSearchQuery","queryResults","searchData","useDataList","category","tag","currentPosts","slice","length","header","paginate","pageNumber","PageHeader","title","path","img","RssFeedIcon","feedlink","className","xs","lg","Search","map","id","frontmatter","fields","key","Card","totalPosts"],"sourceRoot":""}